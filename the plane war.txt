#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <dos.h>
#include <windows.h>
#define MX 100
#define MY 30
void printside(int a[][MX]);//构建边界
void printall(int a[][MX]);//打印全部
void gotoxy(int x, int y);//光标移动
void HideCursor();//隐藏光标
void change_position(int x,int y,int a[][MX]);//改变飞机位置
int dead(int x,int y,int a[][MX] );//死亡判断
void fire(int x,int y,int f[][3]);//判断开火位置
void fire_print(int f[][3],int a[][MX]);//打印开火
void produce_enemy(int e[][3],int m);//产生敌人
void enemy_print(int e[][3],int a[][MX]);//打印敌人
void hit(int a[][MX],int e[][3],int f[][3]);//判断击中
static int scores=0;
int main()
{   while(1){
    int a[MY][MX+20],i,j,m,k,f[13][3],e[13][3];
    int x=50,y=10,flag=0;
    char input;
     scores=0;
    //初始化开火,敌人
    for(i=0;i<=12;i++){f[i][0]=0;e[i][0]=0;}
    for(i=0;i<=MY-1;i++){
        for(j=0;j<=MX-1;j++){
        a[i][j]=0;
        }
    }
    system("cls");
      while(dead(x,y,a)){
        gotoxy(0,0);
        m=rand()%100+2;
        HideCursor();
        if(kbhit()){
                input=getch();
            if(input==72){y=y-2;}
            if(input==80){y=y+2;}
            if(input==75){x=x-2;}
            if(input==77){x=x+2;}
            if(input==' '){fire(x,y,f);}
        }
        k=rand()%10;
        if(k>7) produce_enemy(e,m);
        enemy_print(e,a);
        fire_print(f,a);
        hit(a,e,f);
        change_position(x,y,a);
        printside(a);
        printall(a);

    }
    if(!dead(x,y,a)){
        system("cls");
        for(i=0;i<=13;i++) printf("\n");
        for(i=0;i<=40;i++) printf(" ");
        printf("Game Over! 你的得分为：%d\n                                               按ESC退出。",scores);
        while(1){
        if(getch()==27){flag=1;break;}
        else if(getch()==13) break;
        else continue;
        }}
        if(flag) break;}

}
void printall(int a[][MX]){
    int i,j;
    for(i=0;i<=MY-1;i++){
        for(j=0;j<=MX-1;j++){
            if(a[i][j]==0) printf(" ");
            if(a[i][j]==1||a[i][j]==5) printf("*");
            if(a[i][j]==2||a[i][j]==4) printf("|");
            if(a[i][j]==3) printf("-");
        }
        if(i==0) printf(" 你的得分为：%d",scores);
        printf("\n");
    }
}

void change_position(int x,int y,int a[][MX]){
    int i,j;
    for(i=0;i<MY-1;i++){
        for(j=0;j<MX-1;j++){
          if(a[i][j]!=4&&a[i][j]!=5)  a[i][j]=0;
        }
    }
    for(i=y;i<y+4;i++){
        for(j=x-(i-y);j<=x+(i-y);j++){
            a[i][j]=1;
        }
    }
    a[y+4][x-2]=1;
    a[y+4][x+2]=1;
}

int dead(int x, int y, int a[][MX]){
  if(x>=6&&x<=94&&y>=1&&y<=24&&a[y-1][x]!=5&&a[y][x+1]!=5&&a[y][x-1]!=5&&a[y+1][x-2]!=5&&a[y+1][x+2]!=5&&a[y+2][x-3]!=5&&a[y+2][x+3]!=5) {
        return 1;
     }
  else{
        return 0;
     }
}

void fire(int x,int y,int f[][3]){
    int i;
     for(i=0;i<13;i++){
        if(f[i][0]==0){
            f[i][0]=1;
            f[i][1]=x;
            f[i][2]=y;
            break;
        }
     }
}

void fire_print(int f[][3],int a[][MX]){
    int i;
    for(i=0;i<13;i++){
        if(f[i][0]==1){
            if(f[i][2]>-1){
                a[f[i][2]][f[i][1]]=4;
                a[f[i][2]+2][f[i][1]]=0;
            }
            else{f[i][0]=0;
            a[f[i][2]+2][f[i][1]]=0;}
        }
    }
    for(i=0;i<13;i++){
        f[i][2]=f[i][2]-2;
    }

}

void produce_enemy(int e[][3],int m){
    int i;
  if(2<m&&m<98){
    for(i=0;i<13;i++){
    if(e[i][0]==0){
        e[i][0]=1;
        e[i][1]=m;
        e[i][2]=2;
        break;
  }}
    }
    }

void enemy_print(int e[][3],int a[][MX]){
    int i;
    for(i=0;i<13;i++){
        if(e[i][0]==1){if(e[i][2]<29){
                a[e[i][2]][e[i][1]]=5;
                a[e[i][2]-1][e[i][1]+1]=5;
                a[e[i][2]-1][e[i][1]-1]=5;
                a[e[i][2]-1][e[i][1]]=0;
                a[e[i][2]-2][e[i][1]+1]=0;
                a[e[i][2]-2][e[i][1]-1]=0;
            }
            else if(e[i][2]==29){
                e[i][0]=0;
                a[e[i][2]][e[i][1]]=0;
                a[e[i][2]-2][e[i][1]+1]=0;
                a[e[i][2]-2][e[i][1]-1]=0;
                a[e[i][2]-1][e[i][1]]=0;
            }
            }
    }
    for(i=0;i<13;i++){
        if(e[i][0]==1){e[i][2]=e[i][2]+1;}
    }
    }

void printside(int a[][MX]){
    int i;
    for(i=1;i<=MY-1;i++){
        a[i][1]=2;
        a[i][2]=2;
        a[i][MX-1]=2;
        a[i][MX-2]=2;
    }
    for(i=1;i<MX-1;i++){
        a[0][i]=3;
        a[MY-1][i]=3;
    }
}

void hit(int a[][MX],int e[][3],int f[][3]){
    int i,j;
    for(i=0;i<13;i++){
            for(j=0;j<13;j++)
        if(f[i][0]==1&&e[j][0]==1&&f[i][1]<=e[j][1]+1&&f[i][1]>=e[j][1]-1&&e[i][2]<=f[j][2]){
            f[i][0]=0;
            a[f[i][2]+2][f[i][1]]=0;
            e[j][0]=0;
            a[e[j][2]][e[j][1]]=0;
                a[e[j][2]-2][e[j][1]+1]=0;
                a[e[j][2]-2][e[j][1]-1]=0;
                a[e[j][2]-1][e[j][1]]=0;
                scores++;

        }
    }
}

void HideCursor()
{
	CONSOLE_CURSOR_INFO cursor;
	cursor.bVisible = FALSE;
	cursor.dwSize = sizeof(cursor);
	HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleCursorInfo(handle, &cursor);
}
void gotoxy(int x, int y)
{
	HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);
	COORD pos;
	pos.X = x;
	pos.Y = y;
	SetConsoleCursorPosition(handle, pos);}